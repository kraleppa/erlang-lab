1> Map = fun M(_, []) -> []; M(Fun, [H | T]) -> [Fun(H) | M(Fun, T)] end.
#Fun<erl_eval.36.99386804>
2> Map(fun(X) -> X + 2 end, [1,2,3,4]).
[3,4,5,6]

4> Filter = fun F(_, []) -> []; F(Fun, List) -> [Y || Y <- List, Fun(Y)] end.
#Fun<erl_eval.36.99386804>
5> Filter(fun (X) -> X == 0 end, [1, 0, 0, 1, 2, 3]).
[0,0]
7> Filter(fun (X) -> X rem 2 =/= 0 end, [1, 0, 0, 1, 2, 3]).
[1,1,3]

8> SumDigits = fun(X) -> L = [list_to_integer([Char]) || Char <- integer_to_list(X)], lists:foldl(fun(Y, Acc) -> Y + Acc end, 0, L) end.
#Fun<erl_eval.6.99386804>
9> SumDigits(12345).
15

5> lists:filter(fun(X) -> SumDigits(X) rem 3 == 0; (_) -> false end, L).
[663,330,69,558,852,3,762,342,51,222,186,774,828,138,48,900,
 357,666,51,165,951,915,399,423,216,600,510,480,726|...]